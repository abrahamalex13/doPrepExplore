setwd("..")
install("doPrepExplore")
library(devtools)
devtools::install("doPrepExplore")
setwd("..")
install("doPrepExplore")
library(devtools); library(roxygen2); install("doPrepExplore")
setwd("..")
devtools::install("doPrepExplore")
setwd("..")
devtools::install("doPrepExplore")
install.packages("tidyverse")
install.packages("devtools")
devtools::install("doPrepExplore")
.libPaths()
install.packages("backports")
install.packages("backports")
devtools::install("doPrepExplore")
devtools::install("doPrepExplore")
install.packages("backports")
devtools::install("doPrepExplore")
setwd("..")
devtools::install("doPrepExplore")
install.packages("backport")
devtools::install("doPrepExplore")
setwd("..")
devtools::install("doPrepExplore")
install.packages("backports")
writeLines('PATH="$C:\\rtools40\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
Sys.getenv("PATH")
Sys.getenv("PATH")
writeLines('PATH="$C:\\rtools40\\usr\\bin;$C:\\Program Files\\R\\R-4.0.2\\bin\\x64;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\iCLS\\;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\iCLS\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\Git\\cmd;C:\\Users\\Alex\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Alex\\AppData\\Local\\Programs\\MiKTeX 2.9\\miktex\\bin\\x64\\;"', con = "~/.Renviron")
Sys.which("make")
setwd("..")
devtools::install("doPrepExplore")
devtools::install()
devtools::install()
devtools::install()
devtools::install()
?dplyr::across
devtools::install()
devtools::install()
impute_group_mean <- function(df, varnames_impute, varnames_grp, pre_df_means = NULL) {
if (is.null(pre_df_means)) {
#construct by-group means df ---------
varnames_grp.syms <- rlang::syms(varnames_grp)
df_means <- df %>%
group_by(!!!varnames_grp.syms) %>%
dplyr::summarize(
across(varnames_impute,
.fns = list("mean" = mean(.x, na.rm = T), "n" = sum(!is.na(.x))),
.names = "{.col}_{.fn}"))
# dplyr::summarize_at(varnames_impute,
#                     .funs = funs("mean" = mean(., na.rm = TRUE),
#                                  "n" = sum(!is.na(.))))
#summarize_at auto-renames mean-calculation variables
#if more than one is specified.
# if (length(varnames_impute) == 1) {
#
#   varname_impute <- varnames_impute
#   varname_impute.sym <- rlang::sym(varnames_impute)
#
#   varname_impute_suffix <- paste(varname_impute, "_mean", sep = "")
#   varname_impute_suffix.sym <- rlang::sym(varname_impute_suffix)
#
#   df_means <- df_means %>%
#     rename(!!varname_impute_suffix.sym := !!varname_impute.sym)
#
# }
# -----
} else df_means <- pre_df_means
#populate missing values ----
df <- left_join(df, df_means)
M <- is.na(df[, varnames_impute])
for (varname_i in varnames_impute) {
varname_mean_i <- paste(varname_i, "_mean", sep = "")
df[M[, varname_i], varname_i] <- df[M[, varname_i], varname_mean_i]
}
df <- df %>%
dplyr::select(-ends_with(c("_mean", "_n")))
# ----
if (is.null(pre_df_means)) out <- list("df_means" = df_means, "M" = M, "df_impute" = df)
else out <- list("M" = M, "df_impute" = df)
return(out)
}
impute_group_mean <- function(df, varnames_impute, varnames_grp, pre_df_means = NULL) {
if (is.null(pre_df_means)) {
#construct by-group means df ---------
varnames_grp.syms <- rlang::syms(varnames_grp)
df_means <- df %>%
group_by(!!!varnames_grp.syms) %>%
dplyr::summarize(
across(varnames_impute,
.fns = list("mean" = ~ mean(.x, na.rm = T), "n" = ~ sum(!is.na(.x))),
.names = "{.col}_{.fn}"))
# dplyr::summarize_at(varnames_impute,
#                     .funs = funs("mean" = mean(., na.rm = TRUE),
#                                  "n" = sum(!is.na(.))))
#summarize_at auto-renames mean-calculation variables
#if more than one is specified.
# if (length(varnames_impute) == 1) {
#
#   varname_impute <- varnames_impute
#   varname_impute.sym <- rlang::sym(varnames_impute)
#
#   varname_impute_suffix <- paste(varname_impute, "_mean", sep = "")
#   varname_impute_suffix.sym <- rlang::sym(varname_impute_suffix)
#
#   df_means <- df_means %>%
#     rename(!!varname_impute_suffix.sym := !!varname_impute.sym)
#
# }
# -----
} else df_means <- pre_df_means
#populate missing values ----
df <- left_join(df, df_means)
M <- is.na(df[, varnames_impute])
for (varname_i in varnames_impute) {
varname_mean_i <- paste(varname_i, "_mean", sep = "")
df[M[, varname_i], varname_i] <- df[M[, varname_i], varname_mean_i]
}
df <- df %>%
dplyr::select(-ends_with(c("_mean", "_n")))
# ----
if (is.null(pre_df_means)) out <- list("df_means" = df_means, "M" = M, "df_impute" = df)
else out <- list("M" = M, "df_impute" = df)
return(out)
}
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
help("mgcv-parallel")
library(mgcv)
help("mgcv-parallel")
devtools::install()
install.packages("devtools")
devtools::install()
install.packages("devtools")
devtools::install()
devtools::install()
library(tidyverse)
View(ggplot2::geom_density)
View(ggplot2::aes)
?eqnuos
?enquos
enquos("x", "y")
enquos(x = "x", y = "y")
enquos(x = x, y = y)
test <- enquos(x = x, y = y)
test <- enquos(x = "x", y = "y")
library(tidyverse)
?enquos
quos(x = x, y = y)
?parent.frame()
quos(x = "x", y = "y")
View(ggplot2::aes_)
View(ggplot2:::new_aes)
View(ggplot2:::new_aesthetic)
?quosure
?aes_
?aes_string
View(aes_string)
devtools::install()
View(ggplot2::aes)
?reorder
View(ggplot2::aes_string)
?parse_expr
rlang::parse_expr("x")
?rename_aes
?ggplot2:::rename_aes
?ggplot2::rename_aes
??rename_aes
View(ggplot::geom_density)
View(ggplot2::geom_density)
View(ggplot2:::rename_aes)
?structure
devtools::install()
devtools::install()
devtools::install()
title <- paste("Distribution: ", varname_x, sep = "")
devtools::install()
devtools::install()
devtools::install()
View(ggplot2:::new_aesthetic)
?parent.frame()
parent.frame()
see <- function(x) {print(x) ; parent.frame()}
see()
see(1)
?is_quosure
?quo_get_expr
devtools::install()
devtools::install()
devtools::install()
devtools::install()
?reorder
devtools::install()
devtools::install()
?reorder
devtools::install()
devtools::install()
devtools::install()
devtools::install()
?expr
View(ggplot2::aes_string)
?reorder
View(ggplot2::aes)
?enquo
?reorder
require(graphics)
bymedian <- with(InsectSprays, reorder(spray, count, median))
bymedian <- with(InsectSprays, reorder(-spray, count, median))
bymedian <- with(InsectSprays, reorder(spray, -count, median))
bymedian
bymedian <- with(InsectSprays, reorder(spray, count, median))
bymedian2 <- with(InsectSprays, reorder(spray, -count, median))
bymedian
bymedian2
devtools::install()
devtools::install()
View(ggplot2:::new_aesthetic)
View(ggplot2:::new_aes)
?parse_expr
devtools::install()
devtools::install()
devtools::install()
devtools::install()
?enquo
View(stats:::qr.R)
View(qr.R)
View(qr.solve)
View(qr.coef)
?qr.solve
?lm
?predict.lm
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
library(devtools)
devtools::load_all()
View(dplyr::select)
View(dplyr:::select.data.frame)
View(dplyr:::select.default)
View(dplyr:::select_)
View(dplyr:::select_.data.frame)
View(compat_lazy_dots)
View(dplyr::compat_lazy_dots)
?compat_lazy_dots
devtools::document()
devtools::document()
devtools::load_all
devtools::load_all()
?consolidate_sparse_other_cat
devtools::install()
library(devtools)
use_r("examine_data_types")
?dplyr
?dplyr::select
?caret:::get_types
library(caret)
?caret:::get_types
?caret:::get_types()
caret:::get_types()
?caret:::get_types
document()
document()
document()
install()
devtools::install()
rm(list = ls())
library(devtools())
install.packages("digest")
devtools::install()
install.packages("rlang")
install.packages("rlang")
devtools::install()
install.packages("ps")
install.packages("ps")
devtools::instal()
devtools::install()
install.packages("processx")
install.packages("processx")
devtools::install()
install.packages("testthat")
install.packages("testthat")
devtools::install()
?examine_data_types
?doPrepExplore::examine_data_types
devtools::document()
use_r("filter_nzv")
library(devtools)
use_r("filter_nzv")
?dplyr::select
document()
devtools::install()
install.packages("jsonlite")
rm(list=ls())
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
devtools::install()
use_r()
library(devtools)
use_r()
use_r("stack_summary_stats")
document()
install()
devtools::document()
install()
use_r("impute_via_join")
use_r("get_varnames_some_na")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
install()
View(caret:::get_types)
document()
document()
use_r("derive_consolidation_operator")
document()
document()
install()
document()
use_r("join_consolidate_categories_operator")
document()
?dplyr::select
document()
install()
install()
document()
document()
install()
document()
install()
document()
install()
document()
install()
document()
install()
?splines::bs
document()
install()
document()
?splines:::predict.bs
document()
document()
document()
install()
?caret::dummyVars
install()
document()
install()
document()
install()
install()
document()
install()
?ranger::ranger
operator <- readRDS(filename_operator)
install.packages("digest")
devtools::install()
chk <- c("test1", "test2")
rlang::syms(chk)
library(devtools)
devtools::document()
devtools::install()
devtools::install()
document()
install()
library(devtools)
document()
install()
install()
varnames_summarize <- unlist(lapply(df, is.numeric))
varnames_summarize
varnames_summarize <- colnames(df)[ unlist(lapply(df, is.numeric)) ]
devtools::install()
library(devtools)
devtools::document()
devtools::install()
library(devtools)
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
?caret::createDataPartition
fraction_keep_train <- .75
chk <- caret::createDataPartition(1:100, p = fraction_keep_train, list = FALSE)
chk <- caret::createDataPartition(1:100, p = fraction_keep_train, list = TRUE)
str(chk)
chk <- caret::createDataPartition(1:100, p = fraction_keep_train, list = FALSE)
str(chk)
devtools::document()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
